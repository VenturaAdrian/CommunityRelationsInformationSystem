{
  "version": 3,
  "sources": ["../../@mui/material/CardHeader/CardHeader.js", "../../@mui/material/CardHeader/cardHeaderClasses.js"],
  "sourcesContent": ["'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport Typography, { typographyClasses } from \"../Typography/index.js\";\r\nimport { styled } from \"../zero-styled/index.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from \"./cardHeaderClasses.js\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    avatar: ['avatar'],\r\n    action: ['action'],\r\n    content: ['content'],\r\n    title: ['title'],\r\n    subheader: ['subheader']\r\n  };\r\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\r\n};\r\nconst CardHeaderRoot = styled('div', {\r\n  name: 'MuiCardHeader',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => ({\r\n    [`& .${cardHeaderClasses.title}`]: styles.title,\r\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader,\r\n    ...styles.root\r\n  })\r\n})({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: 16\r\n});\r\nconst CardHeaderAvatar = styled('div', {\r\n  name: 'MuiCardHeader',\r\n  slot: 'Avatar',\r\n  overridesResolver: (props, styles) => styles.avatar\r\n})({\r\n  display: 'flex',\r\n  flex: '0 0 auto',\r\n  marginRight: 16\r\n});\r\nconst CardHeaderAction = styled('div', {\r\n  name: 'MuiCardHeader',\r\n  slot: 'Action',\r\n  overridesResolver: (props, styles) => styles.action\r\n})({\r\n  flex: '0 0 auto',\r\n  alignSelf: 'flex-start',\r\n  marginTop: -4,\r\n  marginRight: -8,\r\n  marginBottom: -4\r\n});\r\nconst CardHeaderContent = styled('div', {\r\n  name: 'MuiCardHeader',\r\n  slot: 'Content',\r\n  overridesResolver: (props, styles) => styles.content\r\n})({\r\n  flex: '1 1 auto',\r\n  [`.${typographyClasses.root}:where(& .${cardHeaderClasses.title})`]: {\r\n    display: 'block'\r\n  },\r\n  [`.${typographyClasses.root}:where(& .${cardHeaderClasses.subheader})`]: {\r\n    display: 'block'\r\n  }\r\n});\r\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiCardHeader'\r\n  });\r\n  const {\r\n    action,\r\n    avatar,\r\n    className,\r\n    component = 'div',\r\n    disableTypography = false,\r\n    subheader: subheaderProp,\r\n    subheaderTypographyProps,\r\n    title: titleProp,\r\n    titleTypographyProps,\r\n    ...other\r\n  } = props;\r\n  const ownerState = {\r\n    ...props,\r\n    component,\r\n    disableTypography\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  let title = titleProp;\r\n  if (title != null && title.type !== Typography && !disableTypography) {\r\n    title = /*#__PURE__*/_jsx(Typography, {\r\n      variant: avatar ? 'body2' : 'h5',\r\n      className: classes.title,\r\n      component: \"span\",\r\n      ...titleTypographyProps,\r\n      children: title\r\n    });\r\n  }\r\n  let subheader = subheaderProp;\r\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\r\n    subheader = /*#__PURE__*/_jsx(Typography, {\r\n      variant: avatar ? 'body2' : 'body1',\r\n      className: classes.subheader,\r\n      color: \"textSecondary\",\r\n      component: \"span\",\r\n      ...subheaderTypographyProps,\r\n      children: subheader\r\n    });\r\n  }\r\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, {\r\n    className: clsx(classes.root, className),\r\n    as: component,\r\n    ref: ref,\r\n    ownerState: ownerState,\r\n    ...other,\r\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\r\n      className: classes.avatar,\r\n      ownerState: ownerState,\r\n      children: avatar\r\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\r\n      className: classes.content,\r\n      ownerState: ownerState,\r\n      children: [title, subheader]\r\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\r\n      className: classes.action,\r\n      ownerState: ownerState,\r\n      children: action\r\n    })]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The action to display in the card header.\r\n   */\r\n  action: PropTypes.node,\r\n  /**\r\n   * The Avatar element to display.\r\n   */\r\n  avatar: PropTypes.node,\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\r\n   * This can be useful to render an alternative Typography variant by wrapping\r\n   * the `title` text, and optional `subheader` text\r\n   * with the Typography component.\r\n   * @default false\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  subheader: PropTypes.node,\r\n  /**\r\n   * These props will be forwarded to the subheader\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  subheaderTypographyProps: PropTypes.object,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  title: PropTypes.node,\r\n  /**\r\n   * These props will be forwarded to the title\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  titleTypographyProps: PropTypes.object\r\n} : void 0;\r\nexport default CardHeader;", "import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nexport function getCardHeaderUtilityClass(slot) {\r\n  return generateUtilityClass('MuiCardHeader', slot);\r\n}\r\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\r\nexport default cardHeaderClasses;"],
  "mappings": "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",
  "names": ["CardHeader", "_jsx", "_jsxs", "PropTypes"]
}
